class Solution {
    public int lengthOfLongestSubstring(String s) {
        int n = s.length();
        if (n == 0 || n == 1) {
            return n;
        }
        Map<Character, Integer> map = new HashMap<>();
        int maxLen = 0, l = 0;
        for (int r = 0; r < n; r++) {
            char c = s.charAt(r);
            if (map.containsKey(c)) {
                l = Math.max(l, map.get(c) + 1);
            }
            maxLen = Math.max(maxLen, r - l + 1);
            map.put(c, r);
        }
        return maxLen;
    }
}

//runtime:4 ms
//memory:42.4 MB
