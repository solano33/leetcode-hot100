class Solution {
    public int[][] merge(int[][] intervals) {
        // sort
        Arrays.sort(intervals, (a, b) -> a[0] == b[0] ? a[1] - b[1] : a[0] - b[0]);

        List<int[]> ans = new LinkedList<>();
        int left = intervals[0][0], right = intervals[0][1];
        for (int i = 1; i < intervals.length; i++) {
            int start = intervals[i][0], end = intervals[i][1];
            if (start > right) {
                System.out.println("left = " + left + ", right = " + right + ", start = " + start + ", end = " + end);
                ans.add(new int[]{left, right});
                left = start;
                right = end;
            } else if (end > right){
                right = end;
            }
        }
        ans.add(new int[]{left, right});
        return ans.toArray(new int[0][0]);
    }
}

//runtime:35 ms
//memory:46.9 MB
